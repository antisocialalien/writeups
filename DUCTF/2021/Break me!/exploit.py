#!/usr/bin/python3

from pwn import *
from string import printable
from base64 import b64decode
from Crypto.Cipher import AES

if args.REMOTE:
    con = remote('pwn-2021.duc.tf', 31914)
else:
    con = process('./aes-ecb.py')

block_size = 16

# key is !_SECRETSOURCE_!
key = b''

con.recvline()

while True:
    payload = b'A' * (block_size - 1 - len(key))

    con.recvline()
    con.sendline(payload)
    blocks = b64decode(con.recvline())
    b1, b2, b3, b4 = [blocks[i:i+block_size] for i in range(0, len(blocks), block_size)]

    for c in printable:
        print("", end=".")
        con.recvline()
        con.sendline(payload + key + c.encode())
        blocks = b64decode(con.recvline())
        _, _, b, _ = [blocks[i:i+block_size] for i in range(0, len(blocks), block_size)]

        if b == b3:
            key += c.encode()
            print(f"\nkey[{len(key)}] = {c}")
            break

    if len(key) == block_size:
        cipher = AES.new(key, AES.MODE_ECB)
        flag = cipher.decrypt(b1 + b2)
        print(flag)

