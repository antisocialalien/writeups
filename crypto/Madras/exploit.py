#!/usr/bin/python3

enc = 6238548897897912462708514382106387305984378113132192980353695746912882399991285268937548949835500837749446265632471076030233510866260067177632747513323223

# Solving the equation system yields the three prime
# factors a, b and c used in this multi-prime RSA.

a = 1644376501336761869533914527999140316946467005479211
b = 2769045283056871559108237639832652911114008081576651
c = 1594118801665580510615541222527591707834932058213541

# Now, the private key can be calculated and used to decrypt
# the original message following standard multi-prime RSA.

n = a*b*c
phi_n = (a-1) * (b-1) * (c-1)

e = 65537
d = pow(e, -1, phi_n)

dec = pow(enc, d, n)

flag = bytes.fromhex(hex(dec)[2:])

print(flag)
